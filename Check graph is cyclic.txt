import java.util.*;
public class Main
{
    static void addEdge(ArrayList<ArrayList<Integer>> adj, int u,int v)
    {
        adj.get(u).add(v);
        adj.get(v).add(u);
    }
    static void printGraph(ArrayList<ArrayList<Integer>> adj)
    {
        for(int i=0;i<adj.size();i++)
        {
            System.out.print(i+" = ");
            for(int j=0;j<adj.get(i).size();j++)
            {
                System.out.print("->"+adj.get(i).get(j));
            }
            System.out.println();
        }
    }
    static void bfs(ArrayList<ArrayList<Integer>> adj,int s,int v)
    {
        int visited[] = new int[v];
        Arrays.fill(visited,-1);
        
        Queue<Integer> queue = new LinkedList<Integer>();
        
        visited[s] = 0;
        queue.add(s);
        
        while(queue.size()!=0)
        {
            s = queue.poll();
            visited[s] = 1;
            
            for(int x:adj.get(s))
            {
                if(visited[x]==-1)
                {
                    visited[x]=0;
                    queue.add(x);
                }
                if(visited[x]==0)
                {
                    System.out.println("loop");
                    System.exit(0);
                }
            }
            
        }
    }
    public static void main(String []args)
    {
        int v = 5;
        ArrayList<ArrayList<Integer> > adj = new ArrayList<ArrayList<Integer>>(v);
        for (int i = 0; i < v; i++)
        {
            adj.add(new ArrayList<Integer>());
        }
        addEdge(adj, 0, 1);
        addEdge(adj, 0, 4);
        addEdge(adj, 1, 2);
        addEdge(adj, 1, 3);
        addEdge(adj, 1, 4);
        addEdge(adj, 2, 3);
        addEdge(adj, 3, 4);
         
        printGraph(adj);
        
        
        bfs(adj,1,v);
    }
}