import java.util.*;
public class CircularQueue
{
    int size,front,rear;
    ArrayList<Integer> queue = new ArrayList<Integer>();
    CircularQueue(int size)
    {
        this.size = size;
        this.front = this.rear = -1;
    }
    public void enqueue(int x)
    {
        if((front==0 && rear==size-1) || (rear==(front-1)%(size-1)))
        {
            System.out.println("Full");
        }
        else if(front==-1)
        {
            front = 0;
            rear = 0;
            queue.add(rear,x);
        }
        else if(rear==size-1 && front!=0)
        {
            rear=0;
            queue.set(rear,x);
        }
        else
        {
            rear+=1;
            if(front <= rear)
            {
                queue.add(rear, x);
            }
            else
            {
                queue.set(rear, x);
            }
        }
    }
    public int dequeue()
    {
        if(front==-1 && rear==-1)
        {
            System.out.println("Empty");
            return -1;
        }
        int temp = queue.get(front);
        if(front==rear)
        {
            front=-1;
            rear=-1;
        }
        else if(front == size - 1)
        {
            front = 0;
        }
        else
        {
            front = front + 1;
        }
        return temp;
    }
    public void display()
    {
        if(front == -1)
        {
            System.out.print("Queue is Empty");
            return;
        }
        if(rear<front)
        {
            for(int i = front; i < size; i++)
            {
                System.out.print(queue.get(i));
                System.out.print(" ");
            }
            
            for(int i = 0; i <= rear; i++)
            {
                System.out.print(queue.get(i));
                System.out.print(" ");
            }
            System.out.println();
        }
        else
        {
            for(int i = front; i < rear+1; i++)
            {
                System.out.print(queue.get(i));
                System.out.print(" ");
            }
        }
    }
    public static void main(String []args)
    {
        CircularQueue q = new CircularQueue(5);
        q.enqueue(1);
        q.enqueue(2);
        q.enqueue(3);
        q.enqueue(4);
        q.enqueue(5);
        q.dequeue();
        q.display();
    }
}